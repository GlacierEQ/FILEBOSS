version: '3.8'

services:
  # Enhanced OpenDevin with Ollama and Supabase integration
  opendevin:
    build: .
    container_name: opendevin-enhanced
    ports:
      - "3000:3000"
    environment:
      - LLM_MODEL=ollama/codellama:7b-instruct
      - LLM_BASE_URL=http://ollama:11434
      - LLM_API_KEY=ollama
      - WORKSPACE_DIR=/opt/workspace_base
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - ENABLE_HYBRID_LLM=true
      - ENABLE_PERSISTENT_STORAGE=true
      - ENABLE_REALTIME_COLLABORATION=true
      - DEBUG=true
    volumes:
      - ${WORKSPACE_DIR:-./workspace}:/opt/workspace_base
      - /var/run/docker.sock:/var/run/docker.sock
      - ./warp.toml:/app/warp.toml
    depends_on:
      - ollama
      - redis
    networks:
      - opendevin-network

  # Ollama for local LLM inference
  ollama:
    image: ollama/ollama:latest
    container_name: ollama-server
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    networks:
      - opendevin-network
    # GPU support (uncomment if you have NVIDIA GPU)
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: redis-cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - opendevin-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - opendevin
    networks:
      - opendevin-network
    profiles:
      - production

  # Model downloader service
  model-setup:
    image: ollama/ollama:latest
    container_name: model-downloader
    volumes:
      - ollama_data:/root/.ollama
    depends_on:
      - ollama
    networks:
      - opendevin-network
    command: >
      sh -c "
        sleep 10 &&
        ollama pull codellama:7b-instruct &&
        ollama pull llama2:7b-chat &&
        ollama pull mistral:7b-instruct &&
        ollama pull deepseek-coder:6.7b-instruct
      "
    profiles:
      - setup

volumes:
  ollama_data:
    driver: local
  redis_data:
    driver: local

networks:
  opendevin-network:
    driver: bridge

