apiVersion: apps/v1
kind: Deployment
metadata:
  name: deepseek-coder
  namespace: deepseek
  labels:
    app: deepseek-coder
spec:
  replicas: 1
  selector:
    matchLabels:
      app: deepseek-coder
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: deepseek-coder
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: deepseek-coder
        image: ${REGISTRY:-ghcr.io/deepseek-ai}/deepseek-coder:${TAG:-latest}
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            nvidia.com/gpu: 1
            memory: "32Gi"
            cpu: "8"
          requests:
            nvidia.com/gpu: 1
            memory: "16Gi"
            cpu: "4"
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: MODEL_SIZE
          valueFrom:
            configMapKeyRef:
              name: deepseek-config
              key: MODEL_SIZE
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: deepseek-config
              key: LOG_LEVEL
        - name: ENABLE_AUTH
          valueFrom:
            configMapKeyRef:
              name: deepseek-config
              key: ENABLE_AUTH
        - name: API_KEYS
          valueFrom:
            secretKeyRef:
              name: deepseek-secrets
              key: api-keys
        - name: ELASTICSEARCH_HOST
          value: "elasticsearch:9200"
        - name: RATE_LIMIT
          valueFrom:
            configMapKeyRef:
              name: deepseek-config
              key: RATE_LIMIT
        volumeMounts:
        - name: model-data
          mountPath: /app/models
        - name: app-data
          mountPath: /app/data
        - name: app-logs
          mountPath: /app/logs
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 300
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
      volumes:
      - name: model-data
        persistentVolumeClaim:
          claimName: deepseek-models
      - name: app-data
        persistentVolumeClaim:
          claimName: deepseek-data
      - name: app-logs
        persistentVolumeClaim:
          claimName: deepseek-logs
      nodeSelector:
        accelerator: nvidia-gpu
      tolerations:
      - key: "nvidia.com/gpu"
        operator: "Exists"
        effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: deepseek-coder
  namespace: deepseek
  labels:
    app: deepseek-coder
spec:
  selector:
    app: deepseek-coder
  ports:
  - name: http
    port: 80
    targetPort: 8000
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: deepseek-config
  namespace: deepseek
data:
  MODEL_SIZE: "base"
  LOG_LEVEL: "INFO"
  ENABLE_AUTH: "true"
  RATE_LIMIT: "100"
---
apiVersion: v1
kind: Secret
metadata:
  name: deepseek-secrets
  namespace: deepseek
type: Opaque
stringData:
  api-keys: "sk-CHANGE-THIS-KEY"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: deepseek-models
  namespace: deepseek
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: nfs-client
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: deepseek-data
  namespace: deepseek
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
  storageClassName: nfs-client
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: deepseek-logs
  namespace: deepseek
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: nfs-client
