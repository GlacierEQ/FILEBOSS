name: DeepSeek-Coder CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      
      - name: Install linting dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort mypy
      
      - name: Run flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      
      - name: Run black
        run: |
          black . --check
      
      - name: Run isort
        run: |
          isort . --check-only --profile black

  test-cpu:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov
      
      - name: Run tests
        run: |
          pytest --cov=. --cov-report=xml -xvs tests/ -k "not gpu"
        env:
          CUDA_VISIBLE_DEVICES: ""

  test-docker:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          tags: deepseek-coder:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Test Docker image
        run: |
          docker run --rm deepseek-coder:test python -c "import torch; print('PyTorch version:', torch.__version__)"

  build-docs:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install sphinx sphinx_rtd_theme myst-parser
      
      - name: Build docs
        run: |
          cd docs
          make html
      
      - name: Upload docs artifact
        uses: actions/upload-artifact@v3
        with:
          name: documentation
          path: docs/build/html

  deploy-docs:
    runs-on: ubuntu-latest
    needs: [test-cpu, build-docs]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - uses: actions/checkout@v3
      
      - name: Download docs artifact
        uses: actions/download-artifact@v3
        with:
          name: documentation
          path: docs/build/html
      
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: docs/build/html
          branch: gh-pages
