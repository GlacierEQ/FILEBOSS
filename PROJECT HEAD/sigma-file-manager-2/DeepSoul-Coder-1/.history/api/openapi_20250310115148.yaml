openapi: 3.0.3
info:
  title: DeepSeek-Coder API
  description: |
    API for code generation, completion, and chat interactions with the DeepSeek-Coder model.
    
    DeepSeek-Coder is an advanced AI coding assistant trained on 2T tokens of code and documentation.
    It supports multiple programming languages and can be used for a variety of code-related tasks.
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  contact:
    name: DeepSeek AI
    url: https://github.com/deepseek-ai/deepseek-coder

servers:
  - url: http://localhost:8000
    description: Local development server
  - url: https://api.deepseek.com/v1
    description: Production server

security:
  - ApiKeyAuth: []

paths:
  /health:
    get:
      summary: Health check endpoint
      description: Check if the API server is operational
      operationId: healthCheck
      security: []  # No auth required for health check
      responses:
        '200':
          description: API is operational
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  model:
                    type: string
                    example: deepseek-coder-33b-instruct

  /api/v1/completion:
    post:
      summary: Generate code completion
      description: Generate a completion for a given code prompt
      operationId: completion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletionRequest'
      responses:
        '200':
          description: Successful completion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletionResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/insertion:
    post:
      summary: Generate code insertion
      description: Generate code to insert between a prefix and suffix
      operationId: insertion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertionRequest'
      responses:
        '200':
          description: Successful code insertion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsertionResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/chat:
    post:
      summary: Generate chat completion
      description: Generate a response to a conversation with the model
      operationId: chat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
      responses:
        '200':
          description: Successful chat completion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
      description: API key with format "Bearer {token}"

  schemas:
    CompletionRequest:
      type: object
      required:
        - prompt
      properties:
        prompt:
          type: string
          description: The code prompt to complete
          example: "def fibonacci(n):"
        max_tokens:
          type: integer
          description: Maximum number of tokens to generate
          default: 100
          minimum: 1
          maximum: 2048
        temperature:
          type: number
          description: Sampling temperature (0.0 to 2.0)
          default: 0.7
          minimum: 0.0
          maximum: 2.0
        top_p:
          type: number
          description: Nucleus sampling parameter (0.0 to 1.0)
          default: 0.95
          minimum: 0.0
          maximum: 1.0
        language:
          type: string
          description: Programming language for better results
          example: "python"
        stop:
          type: array
          description: Stop sequences to end generation
          items:
            type: string
          example: ["# End", "\n\n"]

    CompletionResponse:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the completion
          example: "cmpl-abc123"
        object:
          type: string
          description: Object type
          example: "text_completion"
        created:
          type: integer
          description: Unix timestamp for when the completion was created
          example: 1677825464
        model:
          type: string
          description: The model used for completion
          example: "deepseek-coder-33b-instruct"
        choices:
          type: array
          description: Generated completions
          items:
            type: object
            properties:
              text:
                type: string
                description: The generated text
                example: "    if n <= 1:\n        return n\n    return fibonacci(n-1) + fibonacci(n-2)"
              index:
                type: integer
                description: The index of the choice in the array
                example: 0
              finish_reason:
                type: string
                description: The reason why the generation stopped
                example: "stop"
        usage:
          type: object
          properties:
            prompt_tokens:
              type: integer
              description: Number of tokens in the prompt
              example: 5
            completion_tokens:
              type: integer
              description: Number of tokens in the completion
              example: 20
            total_tokens:
              type: integer
              description: Total number of tokens used
              example: 25

    InsertionRequest:
      type: object
      required:
        - prefix
        - suffix
      properties:
        prefix:
          type: string
          description: Code that comes before the insertion point
          example: "def add_numbers(a, b):"
        suffix:
          type: string
          description: Code that comes after the insertion point
          example: "    return result"
        max_tokens:
          type: integer
          description: Maximum number of tokens to generate
          default: 100
          minimum: 1
          maximum: 2048
        temperature:
          type: number
          description: Sampling temperature (0.0 to 2.0)
          default: 0.7
          minimum: 0.0
          maximum: 2.0
        top_p:
          type: number
          description: Nucleus sampling parameter (0.0 to 1.0)
          default: 0.95
          minimum: 0.0
          maximum: 1.0
        stop:
          type: array
          description: Stop sequences to end generation
          items:
            type: string
          example: ["# End", "\n\n"]

    InsertionResponse:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the insertion
          example: "ins-abc123"
        object:
          type: string
          description: Object type
          example: "text_insertion"
        created:
          type: integer
          description: Unix timestamp for when the insertion was created
          example: 1677825464
        model:
          type: string
          description: The model used for insertion
          example: "deepseek-coder-33b-instruct"
        choices:
          type: array
          description: Generated insertions
          items:
            type: object
            properties:
              text:
                type: string
                description: The generated text
                example: "    result = a + b"
              index:
                type: integer
                description: The index of the choice in the array
                example: 0
              finish_reason:
                type: string
                description: The reason why the generation stopped
                example: "stop"
        usage:
          type: object
          properties:
            prompt_tokens:
              type: integer
              description: Number of tokens in the prompt
              example: 10
            completion_tokens:
              type: integer
              description: Number of tokens in the completion
              example: 5
            total_tokens:
              type: integer
              description: Total number of tokens used
              example: 15

    ChatMessage:
      type: object
      required:
        - role
        - content
      properties:
        role:
          type: string
          description: The role of the message author
          enum: [system, user, assistant]
          example: "user"
        content:
          type: string
          description: The content of the message
          example: "Write a function to calculate factorial in Python"

    ChatRequest:
      type: object
      required:
        - messages
      properties:
        messages:
          type: array
          description: The conversation history
          items:
            $ref: '#/components/schemas/ChatMessage'
        max_tokens:
          type: integer
          description: Maximum number of tokens to generate
          default: 500
          minimum: 1
          maximum: 4096
        temperature:
          type: number
          description: Sampling temperature (0.0 to 2.0)
          default: 0.7
          minimum: 0.0
          maximum: 2.0
        top_p:
          type: number
          description: Nucleus sampling parameter (0.0 to 1.0)
          default: 0.95
          minimum: 0.0
          maximum: 1.0
        stop:
          type: array
          description: Stop sequences to end generation
          items:
            type: string
          example: ["# End", "\n\n"]

    ChatResponse:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the chat completion
          example: "chat-abc123"
        object:
          type: string
          description: Object type
          example: "chat.completion"
        created:
          type: integer
          description: Unix timestamp for when the completion was created
          example: 1677825464
        model:
          type: string
          description: The model used for completion
          example: "deepseek-coder-33b-instruct"
        choices:
          type: array
          description: Generated completions
          items:
            type: object
            properties:
              index:
                type: integer
                description: The index of the choice in the array
                example: 0
              message:
                $ref: '#/components/schemas/ChatMessage'
              finish_reason:
                type: string
                description: The reason why the generation stopped
                example: "stop"
        usage:
          type: object
          properties:
            prompt_tokens:
              type: integer
              description: Number of tokens in the prompt
              example: 15
            completion_tokens:
              type: integer
              description: Number of tokens in the completion
              example: 30
            total_tokens:
              type: integer
              description: Total number of tokens used
              example: 45

    Error:
      type: object
      properties:
        detail:
          type: string
          description: Error message
          example: "Invalid request parameters"
        code:
          type: string
          description: Error code
          example: "invalid_request"
