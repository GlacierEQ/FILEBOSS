# Ninja build file for PhotoPrism

# Variables
builddir = build
ninja_required_version = 1.8.2

# Rules
rule go_build
  command = go build -tags="$tags" -ldflags="$ldflags" -o $out $in
  description = Building Go binary $out

rule download_models
  command = ./scripts/download-brains.sh && ./scripts/download-facenet.sh && ./scripts/download-nasnet.sh
  description = Downloading AI models

rule npm_install
  command = cd frontend && npm ci --no-update-notifier --no-audit
  description = Installing npm dependencies

rule npm_build
  command = cd frontend && npm run build
  description = Building frontend

rule docker_build
  command = docker compose build --pull
  description = Building Docker images

rule docker_push
  command = docker compose push
  description = Pushing Docker images

rule test
  command = go test -v ./...
  description = Running tests

rule deploy
  command = ./scripts/deploy-production.sh
  description = Deploying application

# Build targets
build $builddir/bin/photoprism: go_build cmd/photoprism/photoprism.go
  tags = brains
  ldflags = -X main.version=$(shell git describe --always)-$(shell date -u +%y%m%d)

build download_models: download_models

build frontend_deps: npm_install

build frontend: npm_build
  deps = frontend_deps

build docker: docker_build

build test: test

build deploy: deploy
  deps = docker

# Default target
default $builddir/bin/photoprism

# Phony targets
build all: phony $builddir/bin/photoprism download_models frontend docker

build clean: phony
  command = rm -rf $builddir

# Help information
build help: phony
  command = echo "PhotoPrism Ninja Build System" && echo "Available targets: all, clean, download_models, frontend, docker, test, deploy"
